{"version":3,"sources":["service/persons.js","components/Notification.js","components/Filter.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","notification","notificationStyle","color","type","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","message","Filter","value","handleChange","onChange","PersonForm","props","onSubmit","nameValue","onNameChange","numberValue","onNumberChange","Person","person","remove","name","number","onClick","Persons","persons","map","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setNotification","useEffect","personService","initialPersons","emptyFields","changeNumber","find","p","changedPerson","returnedPerson","setTimeout","catch","e","filter","personsToShow","toLowerCase","includes","event","target","preventDefault","some","window","confirm","concat","console","log","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec6eada3.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then((response) => response.data);\n};\n\nconst add = (newObject) => {\n    const request = axios.post(baseUrl, newObject);\n    return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then((response) => response.data);\n};\n\nexport default { getAll, add, update, remove };\n","import React from \"react\";\n\nconst Notification = ({ notification }) => {\n    const notificationStyle = {\n        color: notification.type === \"error\" ? \"red\" : \"green\",\n        background: \"lightgrey\",\n        fontSize: 20,\n        borderStyle: \"solid\",\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    };\n\n    if (!(\"message\" in notification)) {\n        return null;\n    }\n\n    return <div style={notificationStyle}>{notification.message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst Filter = ({ value, handleChange }) => {\n    return <input value={value} onChange={handleChange} />;\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.onSubmit}>\n            <div>\n                name:{\" \"}\n                <input value={props.nameValue} onChange={props.onNameChange} />\n            </div>\n            <div>\n                number:{\" \"}\n                <input\n                    value={props.numberValue}\n                    onChange={props.onNumberChange}\n                />\n            </div>\n            <button type=\"submit\">add</button>\n        </form>\n    );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ person, remove }) => {\n    return (\n        <li>\n            {person.name} {person.number}{\" \"}\n            <button onClick={() => remove(person.id, person.name)}>\n                delete\n            </button>\n        </li>\n    );\n};\n\nconst Persons = ({ persons, remove }) => {\n    return (\n        <ul>\n            {persons.map((person) => (\n                <Person key={person.name} person={person} remove={remove} />\n            ))}\n        </ul>\n    );\n};\n\nexport default Persons;\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./service/persons\";\nimport Notification from \"./components/Notification\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [newFilter, setNewFilter] = useState(\"\");\n    const [notification, setNotification] = useState({});\n\n    useEffect(() => {\n        personService.getAll().then((initialPersons) => {\n            setPersons(initialPersons);\n        });\n    }, []);\n\n    const emptyFields = () => {\n        setNewName(\"\");\n        setNewNumber(\"\");\n    };\n\n    const handleNameChange = (event) => setNewName(event.target.value);\n    const handleNumberChange = (event) => setNewNumber(event.target.value);\n    const handleFilterChange = (event) => setNewFilter(event.target.value);\n\n    const addPerson = (event) => {\n        event.preventDefault();\n        if (persons.some((person) => person.name === newName)) {\n            if (\n                window.confirm(\n                    `${newName} is already added to phonebook, replace the old number with a new one?`\n                )\n            ) {\n                changeNumber();\n            }\n            return;\n        }\n\n        const personObject = {\n            name: newName,\n            number: newNumber,\n        };\n\n        personService\n            .add(personObject)\n            .then((returnedPerson) => {\n                setPersons(persons.concat(returnedPerson));\n                emptyFields();\n                setNotification({ message: `Added ${returnedPerson.name}` });\n                setTimeout(() => {\n                    setNotification({});\n                }, 2000);\n            })\n            .catch((e) => {\n                console.log(e.response.data);\n                setNotification({\n                    message: e.response.data.error,\n                    type: \"error\",\n                });\n            });\n    };\n\n    const changeNumber = () => {\n        const person = persons.find((p) => p.name === newName);\n        const changedPerson = { ...person, number: newNumber };\n\n        personService\n            .update(person.id, changedPerson)\n            .then((returnedPerson) => {\n                setPersons(\n                    persons.map((p) =>\n                        p.name !== newName ? p : returnedPerson\n                    )\n                );\n                setNotification({\n                    message: `Changed number of ${changedPerson.name}`,\n                });\n                setTimeout(() => {\n                    setNotification({});\n                }, 2000);\n            })\n            .catch((e) => {\n                setNotification({\n                    message: `Information of '${newName}' has already been removed from server`,\n                    type: \"error\",\n                });\n                setTimeout(() => {\n                    setNotification({});\n                }, 2000);\n                setPersons(persons.filter((p) => p.name !== newName));\n            });\n\n        emptyFields();\n    };\n\n    const deletePerson = (id, name) => {\n        if (window.confirm(`Delete ${name}?`)) {\n            personService\n                .remove(id)\n                .then(() => {\n                    setPersons(persons.filter((p) => p.id !== id));\n                    setNotification({ message: `Deleted ${name}` });\n                    setTimeout(() => {\n                        setNotification({});\n                    }, 2000);\n                })\n                .catch((e) => {\n                    setNotification({\n                        message: `Information of '${newName}' has already been removed from server`,\n                        type: \"error\",\n                    });\n                    setTimeout(() => {\n                        setNotification({});\n                    }, 2000);\n                    setPersons(persons.filter((p) => p.id !== id));\n                });\n        }\n    };\n\n    const personsToShow = persons.filter((person) =>\n        person.name.toLowerCase().includes(newFilter.toLowerCase())\n    );\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification notification={notification} />\n            <Filter value={newFilter} handleChange={handleFilterChange} />\n            <h3>add a new</h3>\n            <PersonForm\n                onSubmit={addPerson}\n                nameValue={newName}\n                onNameChange={handleNameChange}\n                numberValue={newNumber}\n                onNumberChange={handleNumberChange}\n            />\n            <h3>Numbers</h3>\n            <Persons persons={personsToShow} remove={deletePerson} />\n        </div>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}